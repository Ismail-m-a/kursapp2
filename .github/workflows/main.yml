on:
  push:
    branches:
      - main
    paths:
      - 'package.json'

jobs:
  check-version-and-publish:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Important for the next step to have the complete git history

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org/'

      - name: Clean node_modules and package-lock.json
        run: |
          rm -rf node_modules
          rm -f package-lock.json

      - name: Install dependencies
        run: npm install

      - name: Build component (if needed)
        run: npm run build

      - name: Check for version change
        id: version_changed
        uses: EndBug/version-check@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          diff-search: true # Search for changes in the last commit

      - name: Publish to NPM
        if: steps.version_changed.outputs.changed == 'true'
        run: npm publish --access public # Ensure public access if it's a scoped package
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  deploy-to-firebase:
    runs-on: ubuntu-latest
    needs: check-version-and-publish  # Körs efter publicering till npm
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Deploy to Firebase Hosting
        run: firebase deploy --only hosting
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

  notify-discord:
    runs-on: ubuntu-latest
    needs: [check-version-and-publish, deploy-to-firebase]  # Detta steg körs efter både publicering och deployment
    steps:
      - name: Send Discord notification on success
        if: success()  # Körs om alla jobb lyckas
        run: |
          curl -H "Content-Type: application/json" \
               -d "{\"content\": \"✅ Jobbet lyckades och paketet har publicerats till npm och distribuerats till Firebase!\"}" \
               ${{ secrets.DISCORD_WEBHOOK_URL }}

      - name: Send Discord notification on failure
        if: failure()  # Körs om något jobb misslyckas
        run: |
          curl -H "Content-Type: application/json" \
               -d "{\"content\": \"❌ Jobbet misslyckades, något gick fel vid publiceringen eller distributionen.\"}" \
               ${{ secrets.DISCORD_WEBHOOK_URL }}
